// <auto-generated />
using System;
using Exam_Portal.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Exam_Portal.Migrations
{
    [DbContext(typeof(DataContext))]
    partial class DataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Exam_Portal.Models.Choice", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("ChoiceContent")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("QuestionID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("QuestionID");

                    b.ToTable("Choice", (string)null);
                });

            modelBuilder.Entity("Exam_Portal.Models.Course", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Course", (string)null);
                });

            modelBuilder.Entity("Exam_Portal.Models.ExamAnswer", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int>("ChoiceID")
                        .HasColumnType("int");

                    b.Property<int>("ExaminationID")
                        .HasColumnType("int");

                    b.Property<bool>("IsCorrect")
                        .HasColumnType("bit");

                    b.Property<int>("QuestionID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("ExaminationID");

                    b.HasIndex("QuestionID");

                    b.ToTable("ExamAnswer", (string)null);
                });

            modelBuilder.Entity("Exam_Portal.Models.ExamTaker", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("ExamTaker", (string)null);
                });

            modelBuilder.Entity("Exam_Portal.Models.Examination", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<DateTime>("EndDateTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("ExamTakerID")
                        .HasColumnType("int");

                    b.Property<int>("ModuleID")
                        .HasColumnType("int");

                    b.Property<DateTime>("StartDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("ExamTakerID");

                    b.HasIndex("ModuleID");

                    b.ToTable("Examination", (string)null);
                });

            modelBuilder.Entity("Exam_Portal.Models.Module", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int>("CourseID")
                        .HasColumnType("int");

                    b.Property<int>("Duration")
                        .HasColumnType("int");

                    b.Property<int>("PassingMark")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("CourseID");

                    b.ToTable("Module", (string)null);
                });

            modelBuilder.Entity("Exam_Portal.Models.Question", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int>("AnswerChoiceID")
                        .HasColumnType("int");

                    b.Property<decimal>("Mark")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("ModuleID")
                        .HasColumnType("int");

                    b.Property<string>("QuestionContent")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("ModuleID");

                    b.ToTable("Question", (string)null);
                });

            modelBuilder.Entity("Exam_Portal.Models.Result", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int>("ExaminationID")
                        .HasColumnType("int");

                    b.Property<int>("TotalMark")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("ExaminationID")
                        .IsUnique();

                    b.ToTable("Result", (string)null);
                });

            modelBuilder.Entity("Exam_Portal.Models.Choice", b =>
                {
                    b.HasOne("Exam_Portal.Models.Question", "Question")
                        .WithMany("Choices")
                        .HasForeignKey("QuestionID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Question");
                });

            modelBuilder.Entity("Exam_Portal.Models.ExamAnswer", b =>
                {
                    b.HasOne("Exam_Portal.Models.Examination", "Examination")
                        .WithMany()
                        .HasForeignKey("ExaminationID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Exam_Portal.Models.Question", "Question")
                        .WithMany("ExamAnswers")
                        .HasForeignKey("QuestionID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Examination");

                    b.Navigation("Question");
                });

            modelBuilder.Entity("Exam_Portal.Models.Examination", b =>
                {
                    b.HasOne("Exam_Portal.Models.ExamTaker", "ExamTaker")
                        .WithMany("Examinations")
                        .HasForeignKey("ExamTakerID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Exam_Portal.Models.Module", "Module")
                        .WithMany("Examinations")
                        .HasForeignKey("ModuleID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("ExamTaker");

                    b.Navigation("Module");
                });

            modelBuilder.Entity("Exam_Portal.Models.Module", b =>
                {
                    b.HasOne("Exam_Portal.Models.Course", "Course")
                        .WithMany("Modules")
                        .HasForeignKey("CourseID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Course");
                });

            modelBuilder.Entity("Exam_Portal.Models.Question", b =>
                {
                    b.HasOne("Exam_Portal.Models.Module", "Module")
                        .WithMany("Questions")
                        .HasForeignKey("ModuleID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Module");
                });

            modelBuilder.Entity("Exam_Portal.Models.Result", b =>
                {
                    b.HasOne("Exam_Portal.Models.Examination", "Examination")
                        .WithOne("Result")
                        .HasForeignKey("Exam_Portal.Models.Result", "ExaminationID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Examination");
                });

            modelBuilder.Entity("Exam_Portal.Models.Course", b =>
                {
                    b.Navigation("Modules");
                });

            modelBuilder.Entity("Exam_Portal.Models.ExamTaker", b =>
                {
                    b.Navigation("Examinations");
                });

            modelBuilder.Entity("Exam_Portal.Models.Examination", b =>
                {
                    b.Navigation("Result");
                });

            modelBuilder.Entity("Exam_Portal.Models.Module", b =>
                {
                    b.Navigation("Examinations");

                    b.Navigation("Questions");
                });

            modelBuilder.Entity("Exam_Portal.Models.Question", b =>
                {
                    b.Navigation("Choices");

                    b.Navigation("ExamAnswers");
                });
#pragma warning restore 612, 618
        }
    }
}
